<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Jacquez's Blog]]></title>
  <link href="jacquez.xyz/atom.xml" rel="self"/>
  <link href="jacquez.xyz/"/>
  <updated>2019-11-12T10:39:28-07:00</updated>
  <id>jacquez.xyz/</id>
  <author>
    <name><![CDATA[Joel Jacquez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Configuración De SSH Para Conexiones Remotas]]></title>
    <link href="jacquez.xyz/blog/2019/11/09/configuracion-de-ssh-para-conexiones-remotas/"/>
    <updated>2019-11-09T20:47:25-07:00</updated>
    <id>jacquez.xyz/blog/2019/11/09/configuracion-de-ssh-para-conexiones-remotas</id>
    <content type="html"><![CDATA[<p>En este punto ya debemos de tener instalado <strong>ssh</strong> en nuestro servidor.</p>

<h2>Paso 1 Iniciar con usuario root</h2>

<p>Lo primero que haremos será conectarnos a nuestro servidor remoto, y para eso utilizaremos el siguiente comando</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">local</span><span class="nv">$ </span>ssh root@ip_del_servidor</code></pre></div>




<!--more-->


<p>una vez ingresado el comando nos pedira el password del usuario root</p>

<p>Es importante saber que el usuario <strong>root</strong> en linux es el usuario administrdor y por lo tanto tiene permisos para todo, lo cual no es recomendable tenerlo habilitado para conexiones <strong>ssh</strong>, esto nos lleva a nuestro segundo paso.</p>

<h2>Paso 2 Crear un nuevo usuario</h2>

<p>Una vez que estamos dentro del servidor remoto como usuario <strong>root</strong>, ya estamos listos para crear una nueva cuenta de usuario que utilizaremos de ahora en adelante.</p>

<p>En este ejemplo llamaremos a nuestro usuario <strong><em>webapps</em></strong>, pero tu puedes usar el nombre que desees, para esto utilizaremos el siguiente comando:</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">root@server# adduser webapps</code></pre></div>


<p>Esto nos hará una cuantas preguntas y nos pedira que ingresemos un password para este usuario, es importante que este password no lo vayamos a olvidar ya que será utilizado de ahora en adelante cuando ingresemos al servidor con este usuario.</p>

<h2>Paso 3 Privilegios de usuario <em>root</em></h2>

<p>Ahora que ya tenemos un cuenta de usuario con permisos regulares lo siguiente que haremos sera agregarle permisos de administrdor, y para eso lo agregaremos al grupo sudo por medio del siguiente comando</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">root@server# gpasswd -a webapps sudo</code></pre></div>


<p>Ahora si ya podremos ejecutar comandos con privilegios/permisos de super usuario</p>

<h2>Paso 4 Configuración del servicio <em>SSH</em></h2>

<p>En este punto ya tenemos un nueva cuenta con la que podremos nos podremos conectar por ssh, lo siguiente es desabilitar la cuenta del usuario <strong><em>root</em></strong> para que no permita conexiones remotas con este usuario.</p>

<p>Lo que vamos a hacer ahora es editar el archivo de configuración <strong><em>ssh</em></strong> con el editor de texto <strong>nano</strong></p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">root@server# nano /etc/ssh/sshd_config</code></pre></div>


<p>una vez abierto el archivo buscaremos la siguiente linea</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">PermitRootLogin yes</code></pre></div>


<p>y ahora lo cambiaremos por la siguiente linea</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">PermitRootLogin no</code></pre></div>


<blockquote><p>Siempre es recomendado desabilitar la cuenta <strong><em>root</em></strong> en cualquier servidor</p></blockquote>

<p>Ahora para terminar toca salir del editor y guardar los cambios realizados para eso utilizaremos la siguiente combinación de teclas <strong>ctrl</strong> + <strong>x</strong> y luego <strong>y</strong>, y por ultimo la tecla <strong>enter</strong></p>

<h2>Paso 5 Reiniciar el servidor SSH</h2>

<p>Ya hemos terminado de configurar nuestro servidor ssh y para que los cambios surtan efecto tenemos que reniciar el servidor, y lo haremos de la suiente manera</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">root@server# service ssh restart</code></pre></div>


<p>Para  probar la nueva configuración cerraremos la conexión actual simplemente tecleando en la terminal</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">root@server# <span class="nb">exit</span></code></pre></div>


<blockquote><p>Si intentamos conectarnos con el usuario <strong><em>root</em></strong> ya no podremos de ahora en adelante nos conectaremos por ssh con el nuevo usuario en este caso <strong><em>webapps</em></strong></p></blockquote>

<p>De ahora en adelante nos conectaremos de la siguiente forma para este ejemplo seguiremos usando el usuario que creamos anteriormente</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">local</span><span class="nv">$ </span>ssh webapps@ip_del_servidor</code></pre></div>


<p>y acontinuacion nos pedirá el password, una vez ejecutado el comando anterior ya estaremos  de nuestro server pero ahora estamos con el usuario <strong><em>webapps</em></strong>.</p>

<h2>Paso 6 Agregar Clave pública al servidor (Opcional)</h2>

<p>Este paso es opcional, pero recomenadado.</p>

<blockquote><p>Las siguientes instrucciones son para facilitarnos las cosas un poco mas y no tener que estar poniendo el password cada vez que intentemos conectarnos al servidor</p></blockquote>

<p>Una vez aclarado el obejetivo de este paso, ahora si manos a la obra.</p>

<h3>Paso 6.a generar claves <em>ssh</em></h3>

<p>Lo primero que haremos sera crear un clave ssh (Si ya tienes una puedes omitir este paso)</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">local</span><span class="nv">$ </span>ssh-keygen -t rsa</code></pre></div>


<p>y  a continuación nos aparecerá algo parecido a esto</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">Generating public/private rsa key pair.
Enter file in which to save the key <span class="o">(</span>/Users/tu_user/.ssh/id_rsa<span class="o">)</span>:</code></pre></div>


<p>Esto nos hara un par de preguntas y un vez terminado esto ya tendremos nuestro par de claves, una privada y una pública con los siguientes nombres respectivamente <strong><em>id_rsa</em></strong> y <strong><em>id_rsa.pub</em></strong> dentro de la carpeta <strong>~/.ssh/</strong></p>

<h3>Paso 6.b Copiar clave pública</h3>

<p>Lo que toca hacer ahora es copiar la clave publica que acabamos de generar en nuestro equipo local.</p>

<blockquote><p>Esta clave la copiaremos en el servidor al que nos queramos conectar, esto es para que ya no nos pida password cada vez que nos conectemos.</p></blockquote>

<p>ahora mostraremos por terminal clave publica que acabamos de generar la cual tiene por nombre <strong>id_rsa.pub</strong> y para esto utilizaremos el siguiente comando</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">local</span><span class="nv">$ </span>cat ~/.ssh/id_rsa.pub</code></pre></div>


<p>Este comando nos mostrara algo muy similar a esto</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">local</span><span class="nv">$ </span>cat ~/.ssh/id_rsa.pub
ssh-rsa AAaAB3NzaC1yc2EAAAADAQABAAABAQCx4mXCbQCtQOS3cSmJw0T2vu7OYHbz2uubGRIUNvYgILexZqJXQ1a4AOqM6nQpa8X4KH3BUxuNJeWrbJqOyKuCK6gNVGTthUKpq+3fWJmRgz8kI2MD/i58uQ+Mbz5IPHMlwdBCtja17hRpbZ8Mwf/yPuJ5YJtkV6pF5B3Yssi8d5xzJ0piL+dkd03f8swJ6OMdMEoEfG4MMnUyY/e3JJAxB2w0m38BMgoL4ZrxCojQeR6keux/Ad31iuvha6bcqB7325T98ICVxj7yOXP2LuDoVifveVm5M9fFN+G5NZae/+8vnoQBzuUX0oT0O21t7QxJ2bvRLLHIPiLXtry+vpjl tu_usuario@equipo_local</code></pre></div>


<h3>Paso 6.c Copiar clave publica en el servidor remoto</h3>

<p>Lo primero que haremos sera conectarnos al servidor con el usuario creado <strong><em>webapps</em></strong></p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="nb">local</span><span class="nv">$ </span>ssh webapps@ip_del_servidor</code></pre></div>


<p>una vez que estemos dentro del servido lo siguiente que haremos sera crear la carpeta <strong><em>.ssh</em></strong> dentro del home de la cuenta que estamos usando</p>

<blockquote><p><strong>Nota:</strong> Tendremos que hacer esto por cada cuenta del servidor a la que nos queramos conectar.</p></blockquote>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">webapps@server<span class="nv">$ </span>mkdir .ssh
webapps@server<span class="nv">$ </span>chmod <span class="m">700</span> .ssh</code></pre></div>


<p>Ahora con el edito <strong>nano</strong> crearemos y editaremos el archivo <strong><em>authorized_keys</em></strong> dentro del directorio <strong><em>.ssh</em></strong></p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">webapps@server<span class="nv">$ </span>nano .ssh/authorized_keys</code></pre></div>


<p>y dentro de este archivo copiaremos el contenido de nuestra clave publica y posteriormente presionaremos <strong><code>ctrl</code></strong>+<strong><code>x</code></strong>  y despues precionamos <strong><code>Y</code></strong> para confirmar los cambios.</p>

<p>Una vez finalizado la edición del archivo le asignaremos los permisos correspondientes</p>

<div class="highlight"><pre><code class="language-bash" data-lang="bash">webapps@server<span class="nv">$ </span>chmod <span class="m">600</span> .ssh/authorized_keys</code></pre></div>


<p>Y ahora si hemos terminado de configurar el servidor, precederemos a salir y de ahora en adelante ya no será necesario ingresar el password cada vez que nos conectemos desde nuestro equipo.</p>
]]></content>
  </entry>
  
</feed>
